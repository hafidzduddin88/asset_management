name: Cleanup

on:
  schedule:
    - cron: '0 17 * * *' # Daily at 00:00 WIB
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clear ALL GitHub Actions cache
        run: |
          echo "Clearing ALL caches..."
          
          # Get all caches
          CACHES=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                        -H "Accept: application/vnd.github.v3+json" \
                        "https://api.github.com/repos/${{ github.repository }}/actions/caches")
          
          # Extract cache IDs and delete all
          echo "$CACHES" | jq -r '.actions_caches[].id' | while read cache_id; do
            if [ ! -z "$cache_id" ]; then
              echo "Deleting cache ID: $cache_id"
              curl -X DELETE \
                   -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                   -H "Accept: application/vnd.github.v3+json" \
                   "https://api.github.com/repos/${{ github.repository }}/actions/caches/$cache_id" || true
              sleep 0.5
            fi
          done
          
          echo "All caches cleared"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Delete old Docker Hub tags
        env:
          REPO: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_PROJECT }}
        run: |
          echo "Fetching tags from $REPO..."
          
          # Get Docker Hub token
          TOKEN=$(curl -s -H "Content-Type: application/json" \
                  -X POST -d '{"username": "${{ secrets.DOCKERHUB_USERNAME }}", "password": "${{ secrets.DOCKERHUB_TOKEN }}"}' \
                  https://hub.docker.com/v2/users/login/ | jq -r .token)
          
          # Get tags (keep latest and last 3 SHA tags)
          TAGS=$(curl -s "https://hub.docker.com/v2/repositories/$REPO/tags?page_size=100" | \
                 jq -r '.results[] | select(.name != "latest") | .name' | \
                 tail -n +4)
          
          # Delete old tags
          for tag in $TAGS; do
            if [ ! -z "$tag" ]; then
              echo "Deleting Docker tag: $tag"
              curl -X DELETE -H "Authorization: JWT $TOKEN" \
                   "https://hub.docker.com/v2/repositories/$REPO/tags/$tag/" || true
              sleep 1
            fi
          done
          
          echo "Docker cleanup completed"