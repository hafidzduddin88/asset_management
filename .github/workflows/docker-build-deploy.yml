name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/ambp

jobs:
  cleanup-build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Delete ALL Docker images
        run: |
          # Get Docker Hub token
          TOKEN=$(curl -s -H "Content-Type: application/json" \
                  -X POST -d '{"username": "${{ secrets.DOCKERHUB_USERNAME }}", "password": "${{ secrets.DOCKERHUB_TOKEN }}"}' \
                  https://hub.docker.com/v2/users/login/ | jq -r .token)
          
          # Get ALL tags
          TAGS=$(curl -s "https://hub.docker.com/v2/repositories/${{ env.DOCKER_REPO }}/tags/?page_size=100" | \
                 jq -r '.results[].name')
          
          # Delete ALL existing tags
          for tag in $TAGS; do
            echo "Deleting tag: $tag"
            curl -X DELETE -H "Authorization: JWT $TOKEN" \
                 "https://hub.docker.com/v2/repositories/${{ env.DOCKER_REPO }}/tags/$tag/" || true
          done
          
          echo "All images deleted. Fresh build will create latest tag."

      - name: Clear Docker cache
        run: |
          docker builder prune -af
          docker system prune -af

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REPO }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          provenance: false

      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}