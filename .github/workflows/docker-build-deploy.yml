name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/ambp

jobs:
  cleanup-build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Delete ALL Docker images and manifests
        run: |
          # Get Docker Hub token
          TOKEN=$(curl -s -H "Content-Type: application/json" \
                  -X POST -d '{"username": "${{ secrets.DOCKERHUB_USERNAME }}", "password": "${{ secrets.DOCKERHUB_TOKEN }}"}' \
                  https://hub.docker.com/v2/users/login/ | jq -r .token)
          
          # Delete ALL tags first
          PAGE=1
          while true; do
            RESPONSE=$(curl -s "https://hub.docker.com/v2/repositories/${{ env.DOCKER_REPO }}/tags/?page_size=100&page=$PAGE")
            TAGS=$(echo "$RESPONSE" | jq -r '.results[]?.name // empty')
            
            if [ -z "$TAGS" ]; then
              echo "No more tags found on page $PAGE"
              break
            fi
            
            for tag in $TAGS; do
              echo "Deleting tag: $tag"
              curl -X DELETE -H "Authorization: JWT $TOKEN" \
                   "https://hub.docker.com/v2/repositories/${{ env.DOCKER_REPO }}/tags/$tag/" || true
              sleep 1
            done
            
            PAGE=$((PAGE + 1))
            if [ $PAGE -gt 10 ]; then break; fi
          done
          
          # Delete untagged manifests by digest
          echo "Deleting untagged manifests..."
          PAGE=1
          while true; do
            RESPONSE=$(curl -s -H "Authorization: JWT $TOKEN" \
                       "https://hub.docker.com/v2/repositories/${{ env.DOCKER_REPO }}/tags/?page_size=100&page=$PAGE")
            
            # Get digests of remaining images
            DIGESTS=$(echo "$RESPONSE" | jq -r '.results[]?.digest // empty' | grep -v "null" | head -20)
            
            if [ -z "$DIGESTS" ]; then
              echo "No more manifests found on page $PAGE"
              break
            fi
            
            for digest in $DIGESTS; do
              echo "Deleting manifest: $digest"
              curl -X DELETE -H "Authorization: JWT $TOKEN" \
                   "https://hub.docker.com/v2/repositories/${{ env.DOCKER_REPO }}/manifests/$digest" || true
              sleep 2
            done
            
            PAGE=$((PAGE + 1))
            if [ $PAGE -gt 5 ]; then break; fi
          done
          
          echo "All images and manifests deleted."

      - name: Clear Docker cache
        run: |
          docker builder prune -af
          docker system prune -af

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REPO }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          provenance: false

      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}