name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ambp:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/ambp:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          provenance: false

      - name: Clean old Docker tags
        run: |
          # Keep only latest and last 5 SHA tags
          TAGS_TO_DELETE=$(curl -s "https://hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USERNAME }}/ambp/tags/?page_size=100" \
            | jq -r '.results[] | select(.name != "latest") | .name' \
            | tail -n +6)
          
          for TAG in $TAGS_TO_DELETE; do
            echo "Deleting tag: $TAG"
            curl -s -X DELETE \
              -H "Authorization: Bearer ${{ secrets.DOCKERHUB_TOKEN }}" \
              "https://hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USERNAME }}/ambp/tags/$TAG/"
          done

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}