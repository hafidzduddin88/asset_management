name: Build and Deploy Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_PROJECT }}

jobs:
  build-and-clear:
    runs-on: ubuntu-latest
    outputs:
      image-digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REPO }}:latest
          cache-from: |
            type=registry,ref=${{ env.DOCKER_REPO }}:latest
            type=gha
          cache-to: type=gha,mode=max

      - name: Delete old Docker tags (keep only latest)
        run: |
          echo "üßπ Cleaning up old Docker Hub tags..."
          TOKEN=$(curl -s -H "Content-Type: application/json" \
                  -X POST -d '{"username": "${{ secrets.DOCKERHUB_USERNAME }}", "password": "${{ secrets.DOCKERHUB_TOKEN }}"}' \
                  https://hub.docker.com/v2/users/login/ | jq -r .token)

          REPO=${{ env.DOCKER_REPO }}
          PAGE=1
          while true; do
            RESPONSE=$(curl -s "https://hub.docker.com/v2/repositories/$REPO/tags/?page_size=100&page=$PAGE")
            TAGS=$(echo "$RESPONSE" | jq -r '.results[] | select(.name != "latest") | .name')

            if [ -z "$TAGS" ]; then
              echo "‚úÖ No old tags found on page $PAGE"
              break
            fi

            for tag in $TAGS; do
              echo "‚ùå Deleting tag: $tag"
              curl -s -X DELETE -H "Authorization: JWT $TOKEN" \
                "https://hub.docker.com/v2/repositories/$REPO/tags/$tag/" || true
              sleep 1
            done

            PAGE=$((PAGE + 1))
            if [ $PAGE -gt 5 ]; then break; fi
          done

          echo "‚úÖ Docker tag cleanup completed."

      - name: Clear old GitHub Actions cache (keep last 5)
        run: |
          echo "üßπ Cleaning up old GitHub Actions cache..."
          gh cache list --limit 100 | tail -n +6 | cut -f1 | xargs -I {} gh cache delete {} || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build-and-clear
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Trigger redeploy on Render
        run: |
          echo "üîÅ Triggering redeploy on Render via webhook..."
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          echo "‚úÖ Render redeploy triggered."

      - name: Deploy notification
        run: |
          echo "‚úÖ Docker image pushed to Docker Hub"
          echo "üöÄ Render is redeploying from ${{ env.DOCKER_REPO }}:latest"
          echo "üìã Check: https://dashboard.render.com"
